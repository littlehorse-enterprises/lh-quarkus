services:
  kafka:
    image: apache/kafka:${KAFKA_VERSION}
    restart: on-failure
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9091,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: CONTROLLER://:9093,INTERNAL://:9091,EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      CLUSTER_ID: bgwoWzvSSlKmk2ysynPDNg
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_DEFAULT_REPLICATION_FACTOR: "1"
      KAFKA_MIN_INSYNC_REPLICAS: "1"
      KAFKA_NUM_PARTITIONS: "10"
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
    healthcheck:
      test: /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9091 --list > /dev/null 2>&1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - kafka_data:/var/lib/kafka/data

  littlehorse:
    image: ghcr.io/littlehorse-enterprises/littlehorse/lh-server:${LH_VERSION}
    restart: on-failure
    ports:
      - "2023:2023"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      LHS_KAFKA_BOOTSTRAP_SERVERS: kafka:9091
      LHS_CLUSTER_ID: lh-quarkus
      LHS_INSTANCE_ID: "1"
      LHS_SHOULD_CREATE_TOPICS: "true"
      LHS_INTERNAL_ADVERTISED_HOST: littlehorse
      LHS_LISTENERS: INTERNAL:2022,EXTERNAL:2023
      LHS_ADVERTISED_LISTENERS: INTERNAL://littlehorse:2022,EXTERNAL://localhost:2023
      LHS_STATE_DIR: /var/lib/lh/data
      LHS_LISTENERS_PROTOCOL_MAP: INTERNAL:PLAIN,EXTERNAL:PLAIN
    healthcheck:
      test: curl -f localhost:1822/liveness
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    volumes:
      - lh_data:/var/lib/lh/data

  dashboard:
    image: ghcr.io/littlehorse-enterprises/littlehorse/lh-dashboard:${LH_VERSION}
    restart: on-failure
    ports:
      - "3000:3000"
    depends_on:
      littlehorse:
        condition: service_healthy
    environment:
      LHC_API_HOST: littlehorse
      LHC_API_PORT: 2022
      LHC_OAUTH_ENABLED: false
    healthcheck:
      test: wget --no-verbose --spider 0.0.0.0:3000
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  kafka_data:
  lh_data:

networks:
  default:
    name: lh-quarkus
